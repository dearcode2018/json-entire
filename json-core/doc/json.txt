


1) json字符串(内存、流、文件...) --> 对象
json字符串中，含有相对多余字段
json字符串中，含有相对少的字段

2) 对象 --> json字符串(内存、流、文件...)
过滤对象的属性、增加对象的属性、修改属性的值、

3) xml字符串(内存、流、文件...) --> 对象
xml字符串中，含有相对多余字段
xml字符串中，含有相对少的字段

4) 对象 --> xml字符串(内存、流、文件...)
过滤对象的属性、增加对象的属性、修改属性的值、


格式
日期(日期、日期时间)格式、数字格式、货币格式、文本格式 ...

序列化: 忽略空值、设置默认值


json-公共功能
1) 根据json字符串或流(字符、字节)、文件、网络URL等方式解析为一个对象
可以设置日期时间解析格式、是否允许为空、空数组/集合、属性缺失、属性冗余、解析指定的属性

2) 输出json字符串、流、文件、网络URL
可以设置日期时间输出格式、是否输出空、空数组/集合、哪些属性可以输出

3) 定制化功能
默认的日期时间解析/输出格式，根据路径去获取一个值/对象/数组、
哪些属性不输出、解析哪些属性、忽略哪些字段、类型解析和输出的兼容性、
为null时设置默认值，空字符串不是null
类型兼容性和转换性，时间、数字、货币等文本格式
空字符串值对某些类型解析的影响，例如日期类型、数字类型、布尔类型...


序列化
1) 格式
日期时间格式 设置
注解、程序设置方式
2) 值
null值是否输出、空集合、空字符串是否输出1
排除指定的属、仅包含指定的属性: 基于属性名、注解、实现接口等方式
3) 
循环引用如何避免、


反序列化
1) 格式
日期时间格式 设置
注解、程序设置方式
2) 值
是否指定默认值、
特殊值、特殊格式 如何避免、屏蔽异常、解决转换失败问题
3) 


